import{j as E}from"./jsx-runtime-D_zvdyIk.js";import{r as o}from"./index-D4lIrffr.js";const p=o.createContext(void 0),c={pomodoro:25*60,short_break:5*60,long_break:15*60},u="pomodoro-tasks",R=({children:t})=>{const[m,l]=o.useState("pomodoro"),[P,r]=o.useState(!1),[S,n]=o.useState(c.pomodoro),[d,i]=o.useState(()=>{const e=localStorage.getItem(u);try{return e?JSON.parse(e):[]}catch{return[]}}),[f,x]=o.useState(0),[a,T]=o.useState(null),g=()=>{n(c[m]),r(!1)},v=e=>{l(e),n(c[e]),r(!1)},C=()=>{a&&i(e=>e.map(s=>s.id===a?{...s,completedPomodoros:s.completedPomodoros+1}:s))};return o.useEffect(()=>{localStorage.setItem(u,JSON.stringify(d))},[d]),E.jsx(p.Provider,{value:{mode:m,setMode:v,isRunning:P,setIsRunning:r,timeLeft:S,setTimeLeft:n,resetTimer:g,tasks:d,setTasks:i,pomodoroCount:f,setPomodoroCount:x,activeTaskId:a,setActiveTaskId:T,incrementCompletedPomodoros:C},children:t})},I=()=>{const t=o.useContext(p);if(!t)throw new Error("usePomodoroContext must be used within PomodoroProvider");return t};R.__docgenInfo={description:"",methods:[],displayName:"PomodoroProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};export{R as P,I as u};
